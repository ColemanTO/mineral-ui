// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea demo examples Snapshots: autosize 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-12,
[data-css-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-12::placeholder,
[data-css-12]::placeholder,
.css-12[data-simulate-placeholder],
[data-css-12][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-input-placeholder,
[data-css-12]::-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12:-ms-input-placeholder,
[data-css-12]:-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-clear,
[data-css-12]::-ms-clear,
.css-12[data-simulate-msclear],
[data-css-12][data-simulate-msclear] {
  display: none;
}

.css-12:focus ~ div:last-child,
[data-css-12]:focus ~ div:last-child,
.css-12[data-simulate-focus] ~ div:last-child,
[data-css-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-26,
[data-css-26] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-26::placeholder,
[data-css-26]::placeholder,
.css-26[data-simulate-placeholder],
[data-css-26][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-input-placeholder,
[data-css-26]::-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26:-ms-input-placeholder,
[data-css-26]:-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-clear,
[data-css-26]::-ms-clear,
.css-26[data-simulate-msclear],
[data-css-26][data-simulate-msclear] {
  display: none;
}

.css-26:focus ~ div:last-child,
[data-css-26]:focus ~ div:last-child,
.css-26[data-simulate-focus] ~ div:last-child,
[data-css-26][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <glamorous(div)
    marginBottom="1rem"
  >
    <div
      className="css-1p1xtzc"
    >
      <TextArea
        autoSize={true}
        defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
        spellCheck={false}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 8,
              "size": "large",
              "spellCheck": false,
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 8,
                "size": "large",
                "spellCheck": false,
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 8,
                      "size": "large",
                      "spellCheck": false,
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={8}
                  size="large"
                  spellCheck={false}
                >
                  <textarea
                    className="css-12"
                    defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                    onInput={[Function]}
                    rows={8}
                    spellCheck={false}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-11"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Hello World"
        rows={1}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Hello World",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Hello World"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="large"
                >
                  <textarea
                    className="css-12"
                    defaultValue="Hello World"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-11"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Hello World"
        rows={1}
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Hello World",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Hello World"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="small"
                >
                  <textarea
                    className="css-26"
                    defaultValue="Hello World"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-11"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
    </div>
  </glamorous(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: controlled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <MyForm>
    <TextArea
      onChange={[Function]}
      value="Hello World"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onChange": [Function],
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
            "value": "Hello World",
          }
        }
        iconEnd={null}
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "disabled": undefined,
              "onChange": [Function],
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
              "value": "Hello World",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onChange": [Function],
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                    "value": "Hello World",
                  }
                }
                controlRef={[Function]}
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onChange={[Function]}
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
                value="Hello World"
              >
                <textarea
                  className="css-11"
                  onChange={[Function]}
                  onInput={[Function]}
                  rows={8}
                  value="Hello World"
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples Snapshots: disabled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.css-5,
[data-css-5] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-5::placeholder,
[data-css-5]::placeholder,
.css-5[data-simulate-placeholder],
[data-css-5][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-5::-ms-input-placeholder,
[data-css-5]::-ms-input-placeholder,
.css-5[data-simulate-msinputplaceholder],
[data-css-5][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-5:-ms-input-placeholder,
[data-css-5]:-ms-input-placeholder,
.css-5[data-simulate-msinputplaceholder],
[data-css-5][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-5::-ms-clear,
[data-css-5]::-ms-clear,
.css-5[data-simulate-msclear],
[data-css-5][data-simulate-msclear] {
  display: none;
}

.css-5:focus ~ div:last-child,
[data-css-5]:focus ~ div:last-child,
.css-5[data-simulate-focus] ~ div:last-child,
[data-css-5][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-19,
[data-css-19] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
  disabled={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": true,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    disabled={true}
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": true,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      disabled={true}
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
        disabled={true}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": true,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            disabled={true}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-5"
              defaultValue="Hello World"
              disabled={true}
              onInput={[Function]}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay
            disabled={true}
          >
            <div
              className="css-19"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: form-field 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-12,
[data-css-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-12::placeholder,
[data-css-12]::placeholder,
.css-12[data-simulate-placeholder],
[data-css-12][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-input-placeholder,
[data-css-12]::-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12:-ms-input-placeholder,
[data-css-12]:-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-clear,
[data-css-12]::-ms-clear,
.css-12[data-simulate-msclear],
[data-css-12][data-simulate-msclear] {
  display: none;
}

.css-12:focus ~ div:last-child,
[data-css-12]:focus ~ div:last-child,
.css-12[data-simulate-focus] ~ div:last-child,
[data-css-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-26,
[data-css-26] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-26 *,
[data-css-26] *,
.css-26 *::before,
[data-css-26] *::before,
.css-26 *::after,
[data-css-26] *::after {
  box-sizing: inherit;
}

.css-27,
[data-css-27] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-27 > *,
[data-css-27] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-28,
[data-css-28] {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.css-29,
[data-css-29] {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<DemoLayout>
  <glamorous(div)
    marginBottom="1rem"
  >
    <div
      className="css-1p1xtzc"
    >
      <FormField
        autoSize={true}
        caption="Please keep comments brief and descriptive"
        input={[Function]}
        label="Comments"
        required={true}
        requiredText="Required"
        rows={2}
      >
        <FormField>
          <div
            className="css-26"
          >
            <label>
              <glamorous(div)
                key="formField-1-textWrapper"
              >
                <div
                  className="css-27"
                >
                  <span
                    id="formField-1-labelText"
                  >
                    Comments
                  </span>
                  <glamorous(span)>
                    <span
                      className="css-28"
                    >
                      Required
                    </span>
                  </glamorous(span)>
                </div>
              </glamorous(div)>
              <TextArea
                aria-describedby="formField-1-caption"
                autoSize={true}
                key="formField-1-control"
                required={true}
                rows={2}
              >
                <TextArea
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-1-caption",
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "autoSize": true,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": true,
                      "resizeable": false,
                      "rows": 2,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": "formField-1-caption",
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "autoSize": true,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": true,
                        "resizeable": false,
                        "rows": 2,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-1"
                      >
                        <glamorous(glamorous(textarea))
                          aria-describedby="formField-1-caption"
                          aria-required={true}
                          autoSize={true}
                          controlPropsIn={
                            Object {
                              "aria-describedby": "formField-1-caption",
                              "aria-invalid": undefined,
                              "aria-required": true,
                              "autoSize": true,
                              "controlRef": [Function],
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": true,
                              "resizeable": false,
                              "rows": 2,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          iconEnd={null}
                          innerRef={[Function]}
                          key="control"
                          onInput={[Function]}
                          required={true}
                          resizeable={false}
                          rows={2}
                          size="large"
                        >
                          <textarea
                            aria-describedby="formField-1-caption"
                            aria-required={true}
                            className="css-12"
                            onInput={[Function]}
                            required={true}
                            rows={2}
                          />
                        </glamorous(glamorous(textarea))>
                        <Underlay>
                          <div
                            className="css-11"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextArea>
              </TextArea>
            </label>
            <glamorous(div)
              caption="Please keep comments brief and descriptive"
              id="formField-1-caption"
            >
              <div
                className="css-29"
                id="formField-1-caption"
              >
                Please keep comments brief and descriptive
              </div>
            </glamorous(div)>
          </div>
        </FormField>
      </FormField>
    </div>
  </glamorous(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: input-ref 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26,
[data-css-26] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-26 *,
[data-css-26] *,
.css-26 *::before,
[data-css-26] *::before,
.css-26 *::after,
[data-css-26] *::after {
  box-sizing: inherit;
}

.css-26:focus,
[data-css-26]:focus,
.css-26[data-simulate-focus],
[data-css-26][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-26:hover,
[data-css-26]:hover,
.css-26[data-simulate-hover],
[data-css-26][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-26:active,
[data-css-26]:active,
.css-26[data-simulate-active],
[data-css-26][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-26::-moz-focus-inner,
[data-css-26]::-moz-focus-inner,
.css-26[data-simulate-mozfocusinner],
[data-css-26][data-simulate-mozfocusinner] {
  border: 0;
}

.css-26 [role="img"],
[data-css-26] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-26 [role="img"]:first-child,
[data-css-26] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-26 [role="img"]:last-child,
[data-css-26] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-26 [role="img"]:only-child,
[data-css-26] [role="img"]:only-child {
  margin: 0;
}

.css-40,
[data-css-40] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-41,
[data-css-41] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-41:first-child,
[data-css-41]:first-child,
.css-41[data-simulate-firstchild],
[data-css-41][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-41:last-child,
[data-css-41]:last-child,
.css-41[data-simulate-lastchild],
[data-css-41][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <DemoLayout>
      <glamorous(div)
        marginBottom="1rem"
      >
        <div
          className="css-1p1xtzc"
        >
          <TextArea
            inputRef={[Function]}
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        className="css-11"
                        onInput={[Function]}
                        rows={8}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <Button
            element="button"
            onClick={[Function]}
            size="large"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              onClick={[Function]}
              size="large"
              text="Focus the input"
              type="button"
              variant="regular"
            >
              <button
                className="css-26"
                onClick={[Function]}
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-40"
                  >
                    <glamorous(span)
                      size="large"
                    >
                      <span
                        className="css-41"
                      >
                        Focus the input
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
      </glamorous(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples Snapshots: invalid 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  invalid={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": true,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": true,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            aria-invalid={true}
            controlPropsIn={
              Object {
                "aria-invalid": true,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              aria-invalid={true}
              className="css-11"
              onInput={[Function]}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: next-to-other-inputs 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26,
[data-css-26] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-26::placeholder,
[data-css-26]::placeholder,
.css-26[data-simulate-placeholder],
[data-css-26][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-input-placeholder,
[data-css-26]::-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26:-ms-input-placeholder,
[data-css-26]:-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-clear,
[data-css-26]::-ms-clear,
.css-26[data-simulate-msclear],
[data-css-26][data-simulate-msclear] {
  display: none;
}

.css-26:focus ~ div:last-child,
[data-css-26]:focus ~ div:last-child,
.css-26[data-simulate-focus] ~ div:last-child,
[data-css-26][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-40,
[data-css-40] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-40::placeholder,
[data-css-40]::placeholder,
.css-40[data-simulate-placeholder],
[data-css-40][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-input-placeholder,
[data-css-40]::-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40:-ms-input-placeholder,
[data-css-40]:-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-clear,
[data-css-40]::-ms-clear,
.css-40[data-simulate-msclear],
[data-css-40][data-simulate-msclear] {
  display: none;
}

.css-40:focus ~ div:last-child,
[data-css-40]:focus ~ div:last-child,
.css-40[data-simulate-focus] ~ div:last-child,
[data-css-40][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-54,
[data-css-54] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-54::placeholder,
[data-css-54]::placeholder,
.css-54[data-simulate-placeholder],
[data-css-54][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-input-placeholder,
[data-css-54]::-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54:-ms-input-placeholder,
[data-css-54]:-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-clear,
[data-css-54]::-ms-clear,
.css-54[data-simulate-msclear],
[data-css-54][data-simulate-msclear] {
  display: none;
}

.css-54:focus ~ div:last-child,
[data-css-54]:focus ~ div:last-child,
.css-54[data-simulate-focus] ~ div:last-child,
[data-css-54][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-68,
[data-css-68] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-68::placeholder,
[data-css-68]::placeholder,
.css-68[data-simulate-placeholder],
[data-css-68][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-68::-ms-input-placeholder,
[data-css-68]::-ms-input-placeholder,
.css-68[data-simulate-msinputplaceholder],
[data-css-68][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-68:-ms-input-placeholder,
[data-css-68]:-ms-input-placeholder,
.css-68[data-simulate-msinputplaceholder],
[data-css-68][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-68::-ms-clear,
[data-css-68]::-ms-clear,
.css-68[data-simulate-msclear],
[data-css-68][data-simulate-msclear] {
  display: none;
}

.css-68:focus ~ div:last-child,
[data-css-68]:focus ~ div:last-child,
.css-68[data-simulate-focus] ~ div:last-child,
[data-css-68][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-82,
[data-css-82] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-82::placeholder,
[data-css-82]::placeholder,
.css-82[data-simulate-placeholder],
[data-css-82][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-82::-ms-input-placeholder,
[data-css-82]::-ms-input-placeholder,
.css-82[data-simulate-msinputplaceholder],
[data-css-82][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-82:-ms-input-placeholder,
[data-css-82]:-ms-input-placeholder,
.css-82[data-simulate-msinputplaceholder],
[data-css-82][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-82::-ms-clear,
[data-css-82]::-ms-clear,
.css-82[data-simulate-msclear],
[data-css-82][data-simulate-msclear] {
  display: none;
}

.css-82:focus ~ div:last-child,
[data-css-82]:focus ~ div:last-child,
.css-82[data-simulate-focus] ~ div:last-child,
[data-css-82][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-96,
[data-css-96] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-96 *,
[data-css-96] *,
.css-96 *::before,
[data-css-96] *::before,
.css-96 *::after,
[data-css-96] *::after {
  box-sizing: inherit;
}

.css-96:focus,
[data-css-96]:focus,
.css-96[data-simulate-focus],
[data-css-96][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-96:hover,
[data-css-96]:hover,
.css-96[data-simulate-hover],
[data-css-96][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-96:active,
[data-css-96]:active,
.css-96[data-simulate-active],
[data-css-96][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-96::-moz-focus-inner,
[data-css-96]::-moz-focus-inner,
.css-96[data-simulate-mozfocusinner],
[data-css-96][data-simulate-mozfocusinner] {
  border: 0;
}

.css-96 [role="img"],
[data-css-96] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-96 [role="img"]:first-child,
[data-css-96] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-96 [role="img"]:last-child,
[data-css-96] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-96 [role="img"]:only-child,
[data-css-96] [role="img"]:only-child {
  margin: 0;
}

.css-110,
[data-css-110] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-111,
[data-css-111] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-111:first-child,
[data-css-111]:first-child,
.css-111[data-simulate-firstchild],
[data-css-111][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-111:last-child,
[data-css-111]:last-child,
.css-111[data-simulate-lastchild],
[data-css-111][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

.css-118 > *,
[data-css-118] > * {
  align-items: flex-start;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
}

.css-118 > * > div,
[data-css-118] > * > div {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.css-119 > *,
[data-css-119] > * {
  align-items: flex-start;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
}

.css-119 > * > div,
[data-css-119] > * > div {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.css-120,
[data-css-120] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-120 [role="img"],
[data-css-120] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-120 [role="img"]:last-of-type,
[data-css-120] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-122,
[data-css-122] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-122 *,
[data-css-122] *,
.css-122 *::before,
[data-css-122] *::before,
.css-122 *::after,
[data-css-122] *::after {
  box-sizing: inherit;
}

.css-122:hover > div:last-child,
[data-css-122]:hover > div:last-child,
.css-122[data-simulate-hover] > div:last-child,
[data-css-122][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-122:focus > div:last-child,
[data-css-122]:focus > div:last-child,
.css-122[data-simulate-focus] > div:last-child,
[data-css-122][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-122:active > div:last-child,
[data-css-122]:active > div:last-child,
.css-122[data-simulate-active] > div:last-child,
[data-css-122][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-122 [role="img"],
[data-css-122] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-122 [role="img"]:last-of-type,
[data-css-122] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-133,
[data-css-133] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-133::placeholder,
[data-css-133]::placeholder,
.css-133[data-simulate-placeholder],
[data-css-133][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-133::-ms-input-placeholder,
[data-css-133]::-ms-input-placeholder,
.css-133[data-simulate-msinputplaceholder],
[data-css-133][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-133:-ms-input-placeholder,
[data-css-133]:-ms-input-placeholder,
.css-133[data-simulate-msinputplaceholder],
[data-css-133][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-133::-ms-clear,
[data-css-133]::-ms-clear,
.css-133[data-simulate-msclear],
[data-css-133][data-simulate-msclear] {
  display: none;
}

.css-133:focus ~ div:last-child,
[data-css-133]:focus ~ div:last-child,
.css-133[data-simulate-focus] ~ div:last-child,
[data-css-133][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-147,
[data-css-147] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-147 *,
[data-css-147] *,
.css-147 *::before,
[data-css-147] *::before,
.css-147 *::after,
[data-css-147] *::after {
  box-sizing: inherit;
}

.css-147:focus,
[data-css-147]:focus,
.css-147[data-simulate-focus],
[data-css-147][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-147:hover,
[data-css-147]:hover,
.css-147[data-simulate-hover],
[data-css-147][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-147:active,
[data-css-147]:active,
.css-147[data-simulate-active],
[data-css-147][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-147::-moz-focus-inner,
[data-css-147]::-moz-focus-inner,
.css-147[data-simulate-mozfocusinner],
[data-css-147][data-simulate-mozfocusinner] {
  border: 0;
}

.css-147 [role="img"],
[data-css-147] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-147 [role="img"]:first-child,
[data-css-147] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-147 [role="img"]:last-child,
[data-css-147] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-147 [role="img"]:only-child,
[data-css-147] [role="img"]:only-child {
  margin: 0;
}

.css-161,
[data-css-161] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.css-162,
[data-css-162] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-162::placeholder,
[data-css-162]::placeholder,
.css-162[data-simulate-placeholder],
[data-css-162][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-162::-ms-input-placeholder,
[data-css-162]::-ms-input-placeholder,
.css-162[data-simulate-msinputplaceholder],
[data-css-162][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-162:-ms-input-placeholder,
[data-css-162]:-ms-input-placeholder,
.css-162[data-simulate-msinputplaceholder],
[data-css-162][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-162::-ms-clear,
[data-css-162]::-ms-clear,
.css-162[data-simulate-msclear],
[data-css-162][data-simulate-msclear] {
  display: none;
}

.css-162:focus ~ div:last-child,
[data-css-162]:focus ~ div:last-child,
.css-162[data-simulate-focus] ~ div:last-child,
[data-css-162][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-176,
[data-css-176] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-176::placeholder,
[data-css-176]::placeholder,
.css-176[data-simulate-placeholder],
[data-css-176][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-176::-ms-input-placeholder,
[data-css-176]::-ms-input-placeholder,
.css-176[data-simulate-msinputplaceholder],
[data-css-176][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-176:-ms-input-placeholder,
[data-css-176]:-ms-input-placeholder,
.css-176[data-simulate-msinputplaceholder],
[data-css-176][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-176::-ms-clear,
[data-css-176]::-ms-clear,
.css-176[data-simulate-msclear],
[data-css-176][data-simulate-msclear] {
  display: none;
}

.css-176:focus ~ div:last-child,
[data-css-176]:focus ~ div:last-child,
.css-176[data-simulate-focus] ~ div:last-child,
[data-css-176][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-190,
[data-css-190] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  min-width: 2em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-190 *,
[data-css-190] *,
.css-190 *::before,
[data-css-190] *::before,
.css-190 *::after,
[data-css-190] *::after {
  box-sizing: inherit;
}

.css-190:focus,
[data-css-190]:focus,
.css-190[data-simulate-focus],
[data-css-190][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-190:hover,
[data-css-190]:hover,
.css-190[data-simulate-hover],
[data-css-190][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-190:active,
[data-css-190]:active,
.css-190[data-simulate-active],
[data-css-190][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-190::-moz-focus-inner,
[data-css-190]::-moz-focus-inner,
.css-190[data-simulate-mozfocusinner],
[data-css-190][data-simulate-mozfocusinner] {
  border: 0;
}

.css-190 [role="img"],
[data-css-190] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-190 [role="img"]:first-child,
[data-css-190] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-190 [role="img"]:last-child,
[data-css-190] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-190 [role="img"]:only-child,
[data-css-190] [role="img"]:only-child {
  margin: 0;
}

.css-204,
[data-css-204] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.css-205,
[data-css-205] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-205::placeholder,
[data-css-205]::placeholder,
.css-205[data-simulate-placeholder],
[data-css-205][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-205::-ms-input-placeholder,
[data-css-205]::-ms-input-placeholder,
.css-205[data-simulate-msinputplaceholder],
[data-css-205][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-205:-ms-input-placeholder,
[data-css-205]:-ms-input-placeholder,
.css-205[data-simulate-msinputplaceholder],
[data-css-205][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-205::-ms-clear,
[data-css-205]::-ms-clear,
.css-205[data-simulate-msclear],
[data-css-205][data-simulate-msclear] {
  display: none;
}

.css-205:focus ~ div:last-child,
[data-css-205]:focus ~ div:last-child,
.css-205[data-simulate-focus] ~ div:last-child,
[data-css-205][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-219,
[data-css-219] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-219::placeholder,
[data-css-219]::placeholder,
.css-219[data-simulate-placeholder],
[data-css-219][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-219::-ms-input-placeholder,
[data-css-219]::-ms-input-placeholder,
.css-219[data-simulate-msinputplaceholder],
[data-css-219][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-219:-ms-input-placeholder,
[data-css-219]:-ms-input-placeholder,
.css-219[data-simulate-msinputplaceholder],
[data-css-219][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-219::-ms-clear,
[data-css-219]::-ms-clear,
.css-219[data-simulate-msclear],
[data-css-219][data-simulate-msclear] {
  display: none;
}

.css-219:focus ~ div:last-child,
[data-css-219]:focus ~ div:last-child,
.css-219[data-simulate-focus] ~ div:last-child,
[data-css-219][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-233,
[data-css-233] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-233::placeholder,
[data-css-233]::placeholder,
.css-233[data-simulate-placeholder],
[data-css-233][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-233::-ms-input-placeholder,
[data-css-233]::-ms-input-placeholder,
.css-233[data-simulate-msinputplaceholder],
[data-css-233][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-233:-ms-input-placeholder,
[data-css-233]:-ms-input-placeholder,
.css-233[data-simulate-msinputplaceholder],
[data-css-233][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-233::-ms-clear,
[data-css-233]::-ms-clear,
.css-233[data-simulate-msclear],
[data-css-233][data-simulate-msclear] {
  display: none;
}

.css-233:focus ~ div:last-child,
[data-css-233]:focus ~ div:last-child,
.css-233[data-simulate-focus] ~ div:last-child,
[data-css-233][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-247,
[data-css-247] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  min-width: 3.25em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-247 *,
[data-css-247] *,
.css-247 *::before,
[data-css-247] *::before,
.css-247 *::after,
[data-css-247] *::after {
  box-sizing: inherit;
}

.css-247:focus,
[data-css-247]:focus,
.css-247[data-simulate-focus],
[data-css-247][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-247:hover,
[data-css-247]:hover,
.css-247[data-simulate-hover],
[data-css-247][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-247:active,
[data-css-247]:active,
.css-247[data-simulate-active],
[data-css-247][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-247::-moz-focus-inner,
[data-css-247]::-moz-focus-inner,
.css-247[data-simulate-mozfocusinner],
[data-css-247][data-simulate-mozfocusinner] {
  border: 0;
}

.css-247 [role="img"],
[data-css-247] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-247 [role="img"]:first-child,
[data-css-247] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-247 [role="img"]:last-child,
[data-css-247] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-247 [role="img"]:only-child,
[data-css-247] [role="img"]:only-child {
  margin: 0;
}

.css-261,
[data-css-261] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.css-261:first-child,
[data-css-261]:first-child,
.css-261[data-simulate-firstchild],
[data-css-261][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-261:last-child,
[data-css-261]:last-child,
.css-261[data-simulate-lastchild],
[data-css-261][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<glamorous(DemoLayout)>
  <DemoLayout
    className="css-118"
  >
    <glamorous(div)
      className="css-118"
      marginBottom="1rem"
    >
      <div
        className="css-119"
      >
        <div>
          <TextArea
            defaultValue="Small"
            rows={1}
            size="small"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "small",
                  }
                }
                iconEnd={null}
                size="small"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "small",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Small"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="small"
                    >
                      <textarea
                        className="css-26"
                        defaultValue="Small"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Small"
            rows={1}
            size="small"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "small",
                  }
                }
                iconEnd={null}
                size="small"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "small",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Small"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="small"
                    >
                      <textarea
                        className="css-82"
                        defaultValue="Small"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Small"
            size="small"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <FauxControl
                className="css-120"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <FauxControl
                  className="css-120"
                  control={[Function]}
                >
                  <div
                    className="css-122"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Small"
                      key="control"
                      size="small"
                      type="text"
                    >
                      <input
                        className="css-133"
                        defaultValue="Small"
                        size="small"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="small"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="small"
              text="Small"
              type="button"
              variant="regular"
            >
              <button
                className="css-147"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-110"
                  >
                    <glamorous(span)
                      size="small"
                    >
                      <span
                        className="css-161"
                      >
                        Small
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
        <div>
          <TextArea
            defaultValue="Medium"
            rows={1}
            size="medium"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                iconEnd={null}
                size="medium"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "medium",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Medium"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="medium"
                    >
                      <textarea
                        className="css-40"
                        defaultValue="Medium"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Medium"
            rows={1}
            size="medium"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                iconEnd={null}
                size="medium"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "medium",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Medium"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="medium"
                    >
                      <textarea
                        className="css-162"
                        defaultValue="Medium"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Medium"
            size="medium"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <FauxControl
                className="css-120"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <FauxControl
                  className="css-120"
                  control={[Function]}
                >
                  <div
                    className="css-122"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Medium"
                      key="control"
                      size="medium"
                      type="text"
                    >
                      <input
                        className="css-176"
                        defaultValue="Medium"
                        size="medium"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="medium"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="medium"
              text="Medium"
              type="button"
              variant="regular"
            >
              <button
                className="css-190"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-110"
                  >
                    <glamorous(span)
                      size="medium"
                    >
                      <span
                        className="css-204"
                      >
                        Medium
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
        <div>
          <TextArea
            defaultValue="Large"
            rows={1}
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Large"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="large"
                    >
                      <textarea
                        className="css-11"
                        defaultValue="Large"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Large"
            rows={1}
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Large"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="large"
                    >
                      <textarea
                        className="css-68"
                        defaultValue="Large"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Large"
            size="large"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <FauxControl
                className="css-120"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-120"
                  control={[Function]}
                >
                  <div
                    className="css-122"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Large"
                      key="control"
                      size="large"
                      type="text"
                    >
                      <input
                        className="css-205"
                        defaultValue="Large"
                        size="large"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="large"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="large"
              text="Large"
              type="button"
              variant="regular"
            >
              <button
                className="css-96"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-110"
                  >
                    <glamorous(span)
                      size="large"
                    >
                      <span
                        className="css-111"
                      >
                        Large
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
        <div>
          <TextArea
            defaultValue="Jumbo"
            rows={1}
            size="jumbo"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                iconEnd={null}
                size="jumbo"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "jumbo",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Jumbo"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="jumbo"
                    >
                      <textarea
                        className="css-54"
                        defaultValue="Jumbo"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Jumbo"
            rows={1}
            size="jumbo"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                iconEnd={null}
                size="jumbo"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-1"
                  >
                    <glamorous(glamorous(textarea))
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "jumbo",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Jumbo"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="jumbo"
                    >
                      <textarea
                        className="css-219"
                        defaultValue="Jumbo"
                        onInput={[Function]}
                        rows={1}
                      />
                    </glamorous(glamorous(textarea))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <FauxControl
                className="css-120"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <FauxControl
                  className="css-120"
                  control={[Function]}
                >
                  <div
                    className="css-122"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Jumbo"
                      key="control"
                      size="jumbo"
                      type="text"
                    >
                      <input
                        className="css-233"
                        defaultValue="Jumbo"
                        size="jumbo"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-25"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="jumbo"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="jumbo"
              text="Jumbo"
              type="button"
              variant="regular"
            >
              <button
                className="css-247"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-110"
                  >
                    <glamorous(span)
                      size="jumbo"
                    >
                      <span
                        className="css-261"
                      >
                        Jumbo
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
      </div>
    </glamorous(div)>
  </DemoLayout>
</glamorous(DemoLayout)>
`;

exports[`TextArea demo examples Snapshots: placeholder 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  placeholder="Leave a comment"
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "placeholder": "Leave a comment",
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "placeholder": "Leave a comment",
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "placeholder": "Leave a comment",
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            placeholder="Leave a comment"
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-11"
              onInput={[Function]}
              placeholder="Leave a comment"
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: read-only 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-12,
[data-css-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-12::placeholder,
[data-css-12]::placeholder,
.css-12[data-simulate-placeholder],
[data-css-12][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-input-placeholder,
[data-css-12]::-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12:-ms-input-placeholder,
[data-css-12]:-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-clear,
[data-css-12]::-ms-clear,
.css-12[data-simulate-msclear],
[data-css-12][data-simulate-msclear] {
  display: none;
}

.css-12:focus ~ div:last-child,
[data-css-12]:focus ~ div:last-child,
.css-12[data-simulate-focus] ~ div:last-child,
[data-css-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

<TextArea
  defaultValue="Hello World"
  readOnly={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": true,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    readOnly={true}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": true,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      readOnly={true}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": true,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            readOnly={true}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-12"
              defaultValue="Hello World"
              onInput={[Function]}
              readOnly={true}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay
            readOnly={true}
          >
            <div
              className="css-11"
              readOnly={true}
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: required 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  required={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": true,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": true,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": true,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": true,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            aria-required={true}
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": true,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": true,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            required={true}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              aria-required={true}
              className="css-11"
              onInput={[Function]}
              required={true}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: rows 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26,
[data-css-26] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-26::placeholder,
[data-css-26]::placeholder,
.css-26[data-simulate-placeholder],
[data-css-26][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-input-placeholder,
[data-css-26]::-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26:-ms-input-placeholder,
[data-css-26]:-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-clear,
[data-css-26]::-ms-clear,
.css-26[data-simulate-msclear],
[data-css-26][data-simulate-msclear] {
  display: none;
}

.css-26:focus ~ div:last-child,
[data-css-26]:focus ~ div:last-child,
.css-26[data-simulate-focus] ~ div:last-child,
[data-css-26][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-40,
[data-css-40] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-40::placeholder,
[data-css-40]::placeholder,
.css-40[data-simulate-placeholder],
[data-css-40][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-input-placeholder,
[data-css-40]::-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40:-ms-input-placeholder,
[data-css-40]:-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-clear,
[data-css-40]::-ms-clear,
.css-40[data-simulate-msclear],
[data-css-40][data-simulate-msclear] {
  display: none;
}

.css-40:focus ~ div:last-child,
[data-css-40]:focus ~ div:last-child,
.css-40[data-simulate-focus] ~ div:last-child,
[data-css-40][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-54,
[data-css-54] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-54::placeholder,
[data-css-54]::placeholder,
.css-54[data-simulate-placeholder],
[data-css-54][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-input-placeholder,
[data-css-54]::-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54:-ms-input-placeholder,
[data-css-54]:-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-clear,
[data-css-54]::-ms-clear,
.css-54[data-simulate-msclear],
[data-css-54][data-simulate-msclear] {
  display: none;
}

.css-54:focus ~ div:last-child,
[data-css-54]:focus ~ div:last-child,
.css-54[data-simulate-focus] ~ div:last-child,
[data-css-54][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <glamorous(div)
    marginBottom="1rem"
  >
    <div
      className="css-1p1xtzc"
    >
      <TextArea
        defaultValue="Small"
        rows={1}
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Small"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="small"
                >
                  <textarea
                    className="css-26"
                    defaultValue="Small"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Medium"
        rows={1}
        size="medium"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "medium",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Medium"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="medium"
                >
                  <textarea
                    className="css-40"
                    defaultValue="Medium"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Large"
        rows={1}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Large"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="large"
                >
                  <textarea
                    className="css-11"
                    defaultValue="Large"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Jumbo"
        rows={1}
        size="jumbo"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "jumbo",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Jumbo"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="jumbo"
                >
                  <textarea
                    className="css-54"
                    defaultValue="Jumbo"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
    </div>
  </glamorous(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: rtl 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <TextArea
        defaultValue="مرحبا بالعالم"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "مرحبا بالعالم",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "مرحبا بالعالم",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="مرحبا بالعالم"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                >
                  <textarea
                    className="css-11"
                    defaultValue="مرحبا بالعالم"
                    onInput={[Function]}
                    rows={8}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`TextArea demo examples Snapshots: size 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26,
[data-css-26] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-26::placeholder,
[data-css-26]::placeholder,
.css-26[data-simulate-placeholder],
[data-css-26][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-input-placeholder,
[data-css-26]::-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26:-ms-input-placeholder,
[data-css-26]:-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-clear,
[data-css-26]::-ms-clear,
.css-26[data-simulate-msclear],
[data-css-26][data-simulate-msclear] {
  display: none;
}

.css-26:focus ~ div:last-child,
[data-css-26]:focus ~ div:last-child,
.css-26[data-simulate-focus] ~ div:last-child,
[data-css-26][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-40,
[data-css-40] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-40::placeholder,
[data-css-40]::placeholder,
.css-40[data-simulate-placeholder],
[data-css-40][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-input-placeholder,
[data-css-40]::-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40:-ms-input-placeholder,
[data-css-40]:-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-clear,
[data-css-40]::-ms-clear,
.css-40[data-simulate-msclear],
[data-css-40][data-simulate-msclear] {
  display: none;
}

.css-40:focus ~ div:last-child,
[data-css-40]:focus ~ div:last-child,
.css-40[data-simulate-focus] ~ div:last-child,
[data-css-40][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-54,
[data-css-54] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-54::placeholder,
[data-css-54]::placeholder,
.css-54[data-simulate-placeholder],
[data-css-54][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-input-placeholder,
[data-css-54]::-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54:-ms-input-placeholder,
[data-css-54]:-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-clear,
[data-css-54]::-ms-clear,
.css-54[data-simulate-msclear],
[data-css-54][data-simulate-msclear] {
  display: none;
}

.css-54:focus ~ div:last-child,
[data-css-54]:focus ~ div:last-child,
.css-54[data-simulate-focus] ~ div:last-child,
[data-css-54][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <glamorous(div)
    marginBottom="1rem"
  >
    <div
      className="css-1p1xtzc"
    >
      <TextArea
        defaultValue="Small"
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 2,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 2,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 2,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Small"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={2}
                  size="small"
                >
                  <textarea
                    className="css-26"
                    defaultValue="Small"
                    onInput={[Function]}
                    rows={2}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Medium"
        size="medium"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 6,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 6,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 6,
                      "size": "medium",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Medium"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={6}
                  size="medium"
                >
                  <textarea
                    className="css-40"
                    defaultValue="Medium"
                    onInput={[Function]}
                    rows={6}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Large"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Large"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                >
                  <textarea
                    className="css-11"
                    defaultValue="Large"
                    onInput={[Function]}
                    rows={8}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Jumbo"
        size="jumbo"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 12,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 12,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 12,
                      "size": "jumbo",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Jumbo"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={12}
                  size="jumbo"
                >
                  <textarea
                    className="css-54"
                    defaultValue="Jumbo"
                    onInput={[Function]}
                    rows={12}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
    </div>
  </glamorous(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: uncontrolled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-11"
              defaultValue="Hello World"
              onInput={[Function]}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: variants 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #3ba164;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #20693d;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #20693d;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #20693d;
}

.css-25,
[data-css-25] {
  background-color: #ffffff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26,
[data-css-26] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-26 *,
[data-css-26] *,
.css-26 *::before,
[data-css-26] *::before,
.css-26 *::after,
[data-css-26] *::after {
  box-sizing: inherit;
}

.css-26:hover > div:last-child,
[data-css-26]:hover > div:last-child,
.css-26[data-simulate-hover] > div:last-child,
[data-css-26][data-simulate-hover] > div:last-child {
  border-color: #cf7911;
}

.css-26:focus > div:last-child,
[data-css-26]:focus > div:last-child,
.css-26[data-simulate-focus] > div:last-child,
[data-css-26][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #8a4d03;
}

.css-26:active > div:last-child,
[data-css-26]:active > div:last-child,
.css-26[data-simulate-active] > div:last-child,
[data-css-26][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #8a4d03;
}

.css-36,
[data-css-36] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-36::placeholder,
[data-css-36]::placeholder,
.css-36[data-simulate-placeholder],
[data-css-36][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-36::-ms-input-placeholder,
[data-css-36]::-ms-input-placeholder,
.css-36[data-simulate-msinputplaceholder],
[data-css-36][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-36:-ms-input-placeholder,
[data-css-36]:-ms-input-placeholder,
.css-36[data-simulate-msinputplaceholder],
[data-css-36][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-36::-ms-clear,
[data-css-36]::-ms-clear,
.css-36[data-simulate-msclear],
[data-css-36][data-simulate-msclear] {
  display: none;
}

.css-36:focus ~ div:last-child,
[data-css-36]:focus ~ div:last-child,
.css-36[data-simulate-focus] ~ div:last-child,
[data-css-36][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #8a4d03;
}

.css-50,
[data-css-50] {
  background-color: #ffffff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-51,
[data-css-51] {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-51 *,
[data-css-51] *,
.css-51 *::before,
[data-css-51] *::before,
.css-51 *::after,
[data-css-51] *::after {
  box-sizing: inherit;
}

.css-51:hover > div:last-child,
[data-css-51]:hover > div:last-child,
.css-51[data-simulate-hover] > div:last-child,
[data-css-51][data-simulate-hover] > div:last-child {
  border-color: #f55353;
}

.css-51:focus > div:last-child,
[data-css-51]:focus > div:last-child,
.css-51[data-simulate-focus] > div:last-child,
[data-css-51][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #b80d0d;
}

.css-51:active > div:last-child,
[data-css-51]:active > div:last-child,
.css-51[data-simulate-active] > div:last-child,
[data-css-51][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #b80d0d;
}

.css-61,
[data-css-61] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-61::placeholder,
[data-css-61]::placeholder,
.css-61[data-simulate-placeholder],
[data-css-61][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-61::-ms-input-placeholder,
[data-css-61]::-ms-input-placeholder,
.css-61[data-simulate-msinputplaceholder],
[data-css-61][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-61:-ms-input-placeholder,
[data-css-61]:-ms-input-placeholder,
.css-61[data-simulate-msinputplaceholder],
[data-css-61][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-61::-ms-clear,
[data-css-61]::-ms-clear,
.css-61[data-simulate-msclear],
[data-css-61][data-simulate-msclear] {
  display: none;
}

.css-61:focus ~ div:last-child,
[data-css-61]:focus ~ div:last-child,
.css-61[data-simulate-focus] ~ div:last-child,
[data-css-61][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff, 0 0 0 2px #b80d0d;
}

.css-75,
[data-css-75] {
  background-color: #ffffff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<DemoLayout>
  <glamorous(div)
    marginBottom="1rem"
  >
    <div
      className="css-1p1xtzc"
    >
      <TextArea
        defaultValue="Success"
        variant="success"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Success",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="success"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Success",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="success"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              variant="success"
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Success",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Success"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                  variant="success"
                >
                  <textarea
                    className="css-11"
                    defaultValue="Success"
                    onInput={[Function]}
                    rows={8}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay
                  variant="success"
                >
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Warning"
        variant="warning"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Warning",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="warning"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Warning",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="warning"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              variant="warning"
            >
              <div
                className="css-26"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Warning",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Warning"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                  variant="warning"
                >
                  <textarea
                    className="css-36"
                    defaultValue="Warning"
                    onInput={[Function]}
                    rows={8}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay
                  variant="warning"
                >
                  <div
                    className="css-50"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Danger"
        variant="danger"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Danger",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="danger"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Danger",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="danger"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              variant="danger"
            >
              <div
                className="css-51"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Danger",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Danger"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                  variant="danger"
                >
                  <textarea
                    className="css-61"
                    defaultValue="Danger"
                    onInput={[Function]}
                    rows={8}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay
                  variant="danger"
                >
                  <div
                    className="css-75"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
    </div>
  </glamorous(div)>
</DemoLayout>
`;
